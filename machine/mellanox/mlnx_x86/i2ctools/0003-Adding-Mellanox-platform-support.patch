From b894bf2271b4d8ce87939f89cd3119fec909d0cd Mon Sep 17 00:00:00 2001
From: Doron Tsur <doront@mellanox.com>
Date: Wed, 30 Jul 2014 23:45:05 +0300
Subject: [PATCH 3/3] Adding Mellanox platform support:  
 sys_eeprom_platform.h: Mellanox platform values update   Adding Mellanox
 eeprom pre-open   Setting bit width to 16 bits

Signed-off-by: Doron Tsur <doront@mellanox.com>
---
 sys_eeprom/24cXX.c               | 59 +++++++++++++++++++++++++++++++++++++---
 sys_eeprom/onie_tlvinfo.c        |  6 ++--
 sys_eeprom/sys_eeprom_platform.h |  6 ++++
 3 files changed, 65 insertions(+), 6 deletions(-)

diff --git a/sys_eeprom/24cXX.c b/sys_eeprom/24cXX.c
index ed9fbcc..d1e9322 100644
--- a/sys_eeprom/24cXX.c
+++ b/sys_eeprom/24cXX.c
@@ -25,6 +25,7 @@
 #include <assert.h>
 #include <string.h>
 #include "24cXX.h"
+#include <sys/io.h>
 
 static int i2c_write_1b(struct eeprom *e, __u8 buf)
 {
@@ -74,7 +75,16 @@ int eeprom_open(char *dev_fqn, int addr, int type, struct eeprom* e)
 	unsigned long funcs;
 	e->fd = e->addr = 0;
 	e->dev = 0;
-	
+	unsigned char data;
+
+	// Start Mellanox open pre-run step 1
+	r = system("modprobe lpci2c");
+	if (r != 0) {
+		fprintf(stderr, "eeprom_open on Mellanox platform: lpci2c module load failed with error %d\n", r);
+		return r;
+	}
+	// End Mellanox open pre-run : step 1
+
 	fd = open(dev_fqn, O_RDWR);
 	if(fd <= 0)
 		return -1;
@@ -92,22 +102,63 @@ int eeprom_open(char *dev_fqn, int addr, int type, struct eeprom* e)
 	CHECK_I2C_FUNC( funcs, I2C_FUNC_SMBUS_READ_WORD_DATA );
 	CHECK_I2C_FUNC( funcs, I2C_FUNC_SMBUS_WRITE_WORD_DATA );
 
+	e->fd = fd;
+	e->dev = dev_fqn;
+	e->type = type;
+
+	// Start Mellanox open pre-run step 2
+	e->addr = 0x70;
+	// set working device - preopen
+	if( ( r = ioctl(fd, I2C_SLAVE, e->addr)) < 0)
+	{
+		fprintf(stderr, "preopen i2c device: setting working device address 0x%02x failed with error %d\n", e->addr, r);
+		return r;
+	}
+	r = i2c_smbus_read_byte(e->fd);
+	if (r < 0)
+	{
+		r = ioperm(0x2500, 0x100, 1);
+		if (r != 0) {
+			fprintf(stderr, "eeprom_open on Mellanox platform: failed to get io permissions with error %d\n", r);
+			return r;
+		}
+		outb(8, 0x25db);
+		data = inb(0x25db);
+		if (data != 8) {
+			fprintf(stderr, "eeprom_open on Mellanox platform: 0x25db io port value expected value is 0x08, current value is: 0x%02x \n", data);
+			return -1;
+		}
+	} else {
+		data = 0x40;
+		r = i2c_write_1b(e, data);
+		if (r != 0) {
+			fprintf(stderr, "eeprom_open on Mellanox platform: failed to set 0x70 with error %d\n", r);
+			return r;
+		}
+	}
+	// End Mellanox open pre-run step 2
+
 	// set working device
 	if( ( r = ioctl(fd, I2C_SLAVE, addr)) < 0)
+	{
+		fprintf(stderr, "setting working device address 0x%02x failed with error %d\n", addr, r);
 		return r;
-	e->fd = fd;
+	}
 	e->addr = addr;
-	e->dev = dev_fqn;
-	e->type = type;
 	return 0;
 }
 
 int eeprom_close(struct eeprom *e)
 {
+	int r;
 	close(e->fd);
 	e->fd = -1;
 	e->dev = 0;
 	e->type = EEPROM_TYPE_UNKNOWN;
+	r = system("rmmod lpci2c");
+	if (r != 0) {
+		fprintf(stderr, "eeprom_close on Mellanox platform: lpci2c module unload failed with error %d\n", r);
+	}
 	return 0;
 }
 
diff --git a/sys_eeprom/onie_tlvinfo.c b/sys_eeprom/onie_tlvinfo.c
index ea5b30b..939cf65 100644
--- a/sys_eeprom/onie_tlvinfo.c
+++ b/sys_eeprom/onie_tlvinfo.c
@@ -4,6 +4,8 @@
 #include "24cXX.h"
 #include "onie_tlvinfo.h"
 
+#define EEPROM_TYPE_BIT_ADDR  EEPROM_TYPE_16BIT_ADDR
+
 /* Set to 1 if we've read EEPROM into memory */
 static int has_been_read = 0;
 /* Set to 1 if the EEPROM contents were valid when read from hardware */
@@ -736,7 +738,7 @@ int read_sys_eeprom(void *eeprom_data, int offset, int len)
 
     c = eeprom_data;
     if (eeprom_open(SYS_EEPROM_I2C_DEVICE, SYS_EEPROM_I2C_ADDR,
-		    EEPROM_TYPE_8BIT_ADDR, &e)) {
+		    EEPROM_TYPE_BIT_ADDR, &e)) {
 	printf("ERROR: Cannot open I2C device\n");
 	return -1;
     }
@@ -762,7 +764,7 @@ int write_sys_eeprom(void *eeprom_data, int len)
     c = eeprom_data;
     for (i = 0; i < len; i++) {
 	if (eeprom_open(SYS_EEPROM_I2C_DEVICE, SYS_EEPROM_I2C_ADDR,
-			EEPROM_TYPE_8BIT_ADDR, &e)) {
+			EEPROM_TYPE_BIT_ADDR, &e)) {
 	    printf("ERROR: Cannot open I2C device\n");
 	    return -1;
 	}
diff --git a/sys_eeprom/sys_eeprom_platform.h b/sys_eeprom/sys_eeprom_platform.h
index 529f774..479e01f 100644
--- a/sys_eeprom/sys_eeprom_platform.h
+++ b/sys_eeprom/sys_eeprom_platform.h
@@ -1,4 +1,10 @@
 #ifndef __SYS_EEPROM_PLATFORM_H_
 #define __SYS_EEPROM_PLATFORM_H_
 
+#define SYS_EEPROM_MAX_SIZE 4096
+#define SYS_EEPROM_OFFSET 0
+#define SYS_EEPROM_SIZE 1024
+#define SYS_EEPROM_I2C_DEVICE "/dev/i2c-1"
+#define SYS_EEPROM_I2C_ADDR 0x51
+
 #endif /* __SYS_EEPROM_PLATFORM_H_ */
-- 
1.8.1.2

